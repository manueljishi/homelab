---
define: &containerPort 80

replicaCount: 1

image:
  repository: vaultwarden/server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {
  app: vault
}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: *containerPort

ingress:
  enabled: true
  className: "traefik"
  annotations: {
    traefik.ingress.kubernetes.io/router.entrypoints: "web, websecure"
  }
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
      - host: passwords.jishihome.xyz
        paths:
        - path: /
          pathType: Prefix
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: "128Mi"
    cpu: "100m"
  limits:
    memory: "256Mi"
    cpu: "200m"

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbeEnabled: false
livenessProbe:
  httpGet:
    path: /
    port: *containerPort
  initialDelaySeconds: 30
  periodSeconds: 60
  failureThreshold: 1
  timeoutSeconds: 3

readinessProbeEnabled: false
readinessProbe:
  httpGet:
    path: /
    port: *containerPort
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 2
  timeoutSeconds: 3

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: vaultwarden-config
    hostPath:
      path: /config/vaultwarden
      type: Directory

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: vaultwarden-config
    mountPath: /data

variables:
  secret: {}
  nonSecret:
    PUID: "1000"
    PGID: "1000"
    TZ: "Europe/Madrid"

nodeSelector: {}

tolerations: []

affinity: {}

test:
  enabled: false