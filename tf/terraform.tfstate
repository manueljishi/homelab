{
  "version": 4,
  "terraform_version": "1.8.2",
  "serial": 9,
  "lineage": "5d56b7c3-7f56-db5c-fbd8-e0584d34c483",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.11.5",
                "chart": "argo-cd",
                "name": "argocd",
                "namespace": "argocd",
                "revision": 9,
                "values": "{\"configs\":{\"params\":{\"server.insecure\":true}},\"server\":{\"ingress\":{\"annotations\":{\"traefik.ingress.kubernetes.io/router.entrypoints\":\"web, websecure\"},\"enabled\":true,\"hostname\":\"argocd.jishihome.xyz\",\"ingressClassName\":\"traefik\",\"path\":\"/\"}}}",
                "version": "7.3.9"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1500,
            "values": [
              "server:\n  ingress:\n    enabled: true\n    ingressClassName: \"traefik\"\n    path: \"/\"\n    hostname: \"argocd.jishihome.xyz\"\n    annotations: {\n      traefik.ingress.kubernetes.io/router.entrypoints: \"web, websecure\"\n    }\n    \nconfigs:\n  params:\n    server.insecure: true"
            ],
            "verify": false,
            "version": "7.3.9",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nvidiagpu",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gpu-operator",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nvidia",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v24.3.0",
                "chart": "gpu-operator",
                "name": "nvidia",
                "namespace": "gpu-operator",
                "revision": 1,
                "values": "{\"toolkit\":{\"env\":[{\"name\":\"CONTAINERD_CONFIG\",\"value\":\"/var/lib/rancher/k3s/agent/etc/containerd/config.toml\"},{\"name\":\"CONTAINERD_SOCKET\",\"value\":\"/run/k3s/containerd/containerd.sock\"},{\"name\":\"CONTAINERD_RUNTIME_CLASS\",\"value\":\"nvidia\"},{\"name\":\"CONTAINERD_SET_AS_DEFAULT\",\"value\":\"true\"}]}}",
                "version": "v24.3.0"
              }
            ],
            "name": "nvidia",
            "namespace": "gpu-operator",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.ngc.nvidia.com/nvidia",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "toolkit.env[0].name",
                "type": "",
                "value": "CONTAINERD_CONFIG"
              },
              {
                "name": "toolkit.env[0].value",
                "type": "",
                "value": "/var/lib/rancher/k3s/agent/etc/containerd/config.toml"
              },
              {
                "name": "toolkit.env[1].name",
                "type": "",
                "value": "CONTAINERD_SOCKET"
              },
              {
                "name": "toolkit.env[1].value",
                "type": "",
                "value": "/run/k3s/containerd/containerd.sock"
              },
              {
                "name": "toolkit.env[2].name",
                "type": "",
                "value": "CONTAINERD_RUNTIME_CLASS"
              },
              {
                "name": "toolkit.env[2].value",
                "type": "",
                "value": "nvidia"
              },
              {
                "name": "toolkit.env[3].name",
                "type": "",
                "value": "CONTAINERD_SET_AS_DEFAULT"
              },
              {
                "name": "toolkit.env[3].value",
                "type": "string",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v24.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.0.1",
                "chart": "traefik",
                "name": "traefik",
                "namespace": "traefik",
                "revision": 3,
                "values": "{\"additionalArguments\":[\"--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik\"],\"env\":null,\"ingressClass\":{\"enabled\":true,\"isDefaultClass\":true},\"ingressRoute\":{\"dashboard\":{\"enabled\":true}},\"logs\":{\"general\":{\"level\":\"ERROR\"}},\"ports\":{\"web\":{\"port\":80},\"websecure\":{\"port\":443}}}",
                "version": "28.2.0"
              }
            ],
            "name": "traefik",
            "namespace": "traefik",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://traefik.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 1500,
            "values": [
              "additionalArguments:\n  - \"--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik\"\n# Configure your CertificateResolver here...\n# \n# HTTP Challenge\n# ---\n# Generic Example:\n#   - --certificatesresolvers.generic.acme.email=your-email@example.com\n#   - --certificatesresolvers.generic.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\n#   - --certificatesresolvers.generic.acme.httpChallenge.entryPoint=web\n#   - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json\n#\n# Prod / Staging Example:\n#   - --certificatesresolvers.staging.acme.email=your-email@example.com\n#   - --certificatesresolvers.staging.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory\n#   - --certificatesresolvers.staging.acme.httpChallenge.entryPoint=web\n#   - --certificatesresolvers.staging.acme.storage=/ssl-certs/acme-staging.json\n#   - --certificatesresolvers.production.acme.email=your-email@example.com\n#   - --certificatesresolvers.production.acme.caServer=https://acme-v02.api.letsencrypt.org/directory\n#   - --certificatesresolvers.production.acme.httpChallenge.entryPoint=web\n#   - --certificatesresolvers.production.acme.storage=/ssl-certs/acme-production.json\n#\n# DNS Challenge\n# ---\n# Cloudflare Example:\n#  - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare\n#  - --certificatesresolvers.cloudflare.acme.email=your-email@example.com\n#  - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1\n#  - --certificatesresolvers.cloudflare.acme.storage=/ssl-certs/acme-cloudflare.json\n#\n# Generic (replace with your DNS provider):\n#  - --certificatesresolvers.generic.acme.dnschallenge.provider=generic\n#  - --certificatesresolvers.generic.acme.email=your-email@example.com\n#  - --certificatesresolvers.generic.acme.storage=/ssl-certs/acme-generic.json\n\nlogs:\n# Configure log settings here...\n  general:\n    level: ERROR\n\nports:\n# Configure your entrypoints here...\n  web:\n    # (optional) Permanent Redirect to HTTPS\n    # redirectTo:\n    #   port: websecure\n    port: 80\n  websecure:\n    port: 443\n  #   tls:\n  #     enabled: false\n      # (optional) Set a Default CertResolver\n      # certResolver: cloudflare\n  \n\nenv:\n# Set your environment variables here...\n# \n# DNS Challenge Credentials\n# ---\n# Cloudflare Example:\n#   - name: CF_API_EMAIL\n#     valueFrom:\n#       secretKeyRef:\n#         key: email\n#         name: cloudflare-credentials\n#   - name: CF_API_KEY\n#     valueFrom:\n#       secretKeyRef:\n#         key: apiKey\n#         name: cloudflare-credentials\n\n# Disable Dashboard\ningressRoute:\n  dashboard:\n    enabled: true\n\n# Persistent Storage\n# persistence:\n#   enabled: true\n#   name: ssl-certs\n#   size: 1Gi\n#   path: /ssl-certs\n\n# deployment:\n#   initContainers:\n#     # The \"volume-permissions\" init container is required if you run into permission issues.\n#     # Related issue: https://github.com/containous/traefik/issues/6972\n#     - name: volume-permissions\n#       image: busybox:1.36.1\n#       command: [\"sh\", \"-c\", \"chmod -Rv 600 /ssl-certs/*\"]\n#       volumeMounts:\n#         - name: ssl-certs\n#           mountPath: /ssl-certs\n\n# Set Traefik as your default Ingress Controller, according to Kubernetes 1.19+ changes.\ningressClass:\n  enabled: true\n  isDefaultClass: true\n"
            ],
            "verify": false,
            "version": "28.2.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
